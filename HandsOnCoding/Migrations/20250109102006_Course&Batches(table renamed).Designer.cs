// <auto-generated />
using System;
using HandsOnCoding.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HandsOnCoding.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250109102006_Course&Batches(table renamed)")]
    partial class CourseBatchestablerenamed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HandsOnCoding.Models.Batch", b =>
                {
                    b.Property<int>("BatchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BatchID"));

                    b.Property<string>("BatchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartFrom")
                        .HasColumnType("datetime2");

                    b.HasKey("BatchID");

                    b.HasIndex("CourseId");

                    b.ToTable("Batches");

                    b.HasData(
                        new
                        {
                            BatchID = 1,
                            BatchName = "OIL",
                            CourseId = 1,
                            StartFrom = new DateTime(2024, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BatchID = 2,
                            BatchName = "OIL",
                            CourseId = 1,
                            StartFrom = new DateTime(2024, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BatchID = 3,
                            BatchName = "OIL",
                            CourseId = 2,
                            StartFrom = new DateTime(2024, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BatchID = 4,
                            BatchName = "OIL",
                            CourseId = 3,
                            StartFrom = new DateTime(2025, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("HandsOnCoding.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("CourseDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseDuration")
                        .HasColumnType("int");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CourseStatus")
                        .HasColumnType("bit");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseDescription = "Intermediate java to advance",
                            CourseDuration = 40,
                            CourseName = "java",
                            CourseStatus = true
                        },
                        new
                        {
                            CourseId = 2,
                            CourseDescription = "Intermediate dotNet to advance",
                            CourseDuration = 40,
                            CourseName = "dotNet",
                            CourseStatus = true
                        },
                        new
                        {
                            CourseId = 3,
                            CourseDescription = "Intermediate Python to advance",
                            CourseDuration = 40,
                            CourseName = "Python",
                            CourseStatus = true
                        },
                        new
                        {
                            CourseId = 4,
                            CourseDescription = "Intermediate SharePoint to advance",
                            CourseDuration = 40,
                            CourseName = "SharePoint",
                            CourseStatus = true
                        });
                });

            modelBuilder.Entity("HandsOnCoding.Models.Batch", b =>
                {
                    b.HasOne("HandsOnCoding.Models.Course", "Course")
                        .WithMany("Batches")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("HandsOnCoding.Models.Course", b =>
                {
                    b.Navigation("Batches");
                });
#pragma warning restore 612, 618
        }
    }
}
